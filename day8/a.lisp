(ql:quickload "alexandria")
(alexandria:iota 3)

(setf testdata (list 2 3 0 3 10 11 12 1 1 0 1 99 2 1 1 2))
(setf data (list 7 11 7 2 4 5 3 5 1 9 0 9 6 6 7 4 6 3 8 1 1 3 2 3 1 1 2 3 1 3 1 8 0 6 3 6 9 7 1 2 1 1 2 2 3 2 1 1 1 6 0 7 9 6 1 4 4 1 5 1 1 2 3 3 3 1 2 5 1 2 3 5 1 5 0 11 1 5 7 5 4 2 2 9 9 6 4 1 1 1 3 1 1 9 0 10 2 3 7 3 7 6 1 9 3 5 2 3 1 1 1 3 1 1 2 1 8 0 10 1 3 2 7 1 7 6 8 2 7 2 2 3 1 3 1 1 2 3 4 3 4 2 3 6 1 6 0 9 3 5 2 7 6 6 2 4 1 1 1 1 2 1 2 1 5 0 11 7 5 1 9 9 3 1 9 9 7 4 1 1 3 1 1 1 6 0 7 1 4 1 8 3 2 7 2 2 3 1 3 1 2 5 4 3 2 2 3 4 1 8 0 10 6 4 2 3 6 4 6 1 8 7 3 2 2 1 2 1 1 2 1 8 0 10 2 8 1 4 5 1 7 9 2 1 2 3 1 1 1 1 1 1 1 5 0 6 1 9 9 9 8 2 2 3 1 3 1 3 4 5 2 4 5 6 2 3 5 3 3 4 1 9 0 7 3 1 5 7 4 4 4 2 2 2 1 1 1 1 1 3 1 7 0 11 9 1 8 1 7 8 4 4 1 3 3 3 3 2 1 2 3 1 1 6 0 9 1 9 1 8 4 3 3 8 5 3 1 1 1 3 3 2 2 4 4 3 7 1 6 0 10 9 6 8 9 9 1 3 8 1 6 2 3 2 2 1 2 1 6 0 11 2 3 7 3 7 2 1 9 3 4 1 1 1 1 2 2 3 1 9 0 9 2 1 6 1 4 9 5 1 1 1 2 1 3 3 2 1 1 1 4 1 1 1 1 1 3 3 7 1 5 0 7 5 5 1 1 4 2 1 3 3 1 3 1 1 6 0 8 9 1 8 4 1 4 2 5 1 2 3 2 1 3 1 8 0 9 8 1 2 1 9 3 9 4 9 1 2 1 1 2 3 1 1 1 2 3 3 2 5 1 3 4 1 6 0 6 6 1 5 6 5 9 1 1 2 2 2 1 1 7 0 6 3 1 8 7 5 6 2 1 1 1 2 2 1 1 6 0 9 3 8 6 9 5 8 8 1 2 3 1 2 1 2 3 4 2 3 1 3 5 1 8 0 6 1 6 8 6 1 7 1 2 3 3 3 1 2 2 1 9 0 9 5 7 6 1 8 8 1 8 3 3 3 3 1 1 3 3 1 2 1 6 0 10 7 4 8 9 8 8 1 7 9 8 2 1 1 3 3 1 1 5 1 5 4 3 5 2 5 5 3 5 1 9 0 7 1 4 9 1 3 6 1 1 1 3 1 3 1 1 1 2 1 7 0 7 1 1 1 5 7 9 9 2 1 1 1 3 2 3 1 7 0 8 7 1 5 3 7 7 1 3 1 1 2 1 2 3 1 5 4 2 1 2 3 6 1 5 0 9 1 5 9 2 8 1 1 3 6 1 1 2 1 1 1 9 0 9 9 9 5 9 3 9 1 3 8 2 1 2 2 1 1 2 1 2 1 7 0 7 9 9 6 2 4 1 8 2 2 3 2 1 1 1 1 3 1 5 2 3 3 5 1 6 0 6 5 9 2 4 1 1 1 2 3 1 2 1 1 6 0 11 6 1 9 1 2 5 1 8 5 1 1 1 1 3 3 3 3 1 9 0 7 7 4 1 1 7 8 1 2 1 2 1 3 2 3 1 3 5 3 1 3 5 3 4 1 8 0 9 2 1 1 9 6 6 6 9 6 2 3 3 1 1 1 2 2 1 5 0 11 5 1 7 4 1 8 7 9 1 6 6 2 1 3 1 3 1 8 0 8 7 8 3 2 1 4 7 8 1 1 2 1 2 2 2 3 4 2 5 3 3 7 1 7 0 6 9 9 2 7 3 1 2 2 2 1 2 1 2 1 5 0 10 1 9 9 9 5 8 7 4 4 9 3 1 1 1 2 1 6 0 7 3 5 8 8 1 2 6 1 2 1 3 3 1 3 1 3 4 1 2 4 2 5 7 4 1 5 4 3 6 1 9 0 10 5 2 7 8 2 6 8 6 7 1 2 1 1 1 2 1 3 2 1 1 5 0 7 9 4 1 6 7 1 2 2 3 2 1 1 1 6 0 11 3 2 1 2 2 2 9 9 4 2 1 3 3 1 3 1 2 3 5 3 4 1 2 3 4 1 7 0 8 1 6 1 5 8 1 9 3 3 1 1 1 3 1 3 1 6 0 11 7 1 7 1 2 1 7 4 8 2 8 1 1 3 1 1 3 1 8 0 7 5 7 9 9 9 1 9 1 3 3 3 1 2 3 1 3 4 1 3 3 6 1 6 0 7 7 2 5 1 1 5 6 1 1 1 3 1 1 1 7 0 7 1 1 9 7 1 8 1 1 3 2 2 2 1 1 1 8 0 9 8 4 4 9 5 1 8 1 9 2 2 2 1 2 1 3 3 1 3 4 2 3 4 3 7 1 5 0 6 1 6 6 1 1 5 3 1 1 3 1 1 7 0 6 1 7 9 5 3 1 2 2 1 1 1 2 2 1 7 0 8 3 9 5 2 1 3 3 1 1 1 3 3 1 3 2 2 5 1 3 4 5 2 3 7 1 9 0 6 1 1 8 7 1 3 3 1 2 3 3 1 2 2 3 1 9 0 11 1 4 3 1 6 8 6 5 7 9 6 3 3 1 1 1 1 1 2 1 1 9 0 11 4 3 1 4 4 5 1 4 3 2 5 1 2 3 3 3 1 1 1 3 2 3 2 5 2 1 5 3 4 2 4 5 3 3 6 1 7 0 11 3 5 1 8 4 7 4 9 1 5 9 3 1 3 2 3 3 1 1 6 0 9 1 8 6 7 4 5 8 7 8 2 1 3 2 2 3 1 9 0 9 8 8 4 3 1 7 8 7 1 1 1 2 2 3 2 1 1 1 5 4 4 2 2 4 3 6 1 9 0 8 9 5 3 1 4 8 1 7 2 2 2 2 1 1 3 2 1 1 9 0 6 7 4 7 1 3 8 2 2 1 3 2 2 1 1 1 1 6 0 11 8 3 4 1 8 6 5 9 1 1 8 1 2 2 2 3 3 3 5 1 4 1 4 3 4 1 5 0 8 5 9 8 5 6 1 2 9 2 1 1 3 1 1 7 0 8 2 6 1 8 7 9 3 1 1 1 1 3 2 1 2 1 7 0 6 2 1 5 8 5 7 1 3 3 3 3 2 1 2 2 2 2 3 7 1 8 0 10 1 7 5 4 2 3 2 1 6 2 1 2 1 2 3 3 1 3 1 5 0 6 1 7 5 2 4 3 2 3 1 2 2 1 8 0 6 1 9 5 4 2 6 2 3 2 1 2 1 1 2 2 1 2 3 1 1 3 3 7 1 9 0 6 3 7 1 5 5 1 1 2 2 3 3 2 3 1 1 1 5 0 8 9 6 8 7 1 9 5 8 2 2 1 2 3 1 5 0 7 2 9 1 9 6 8 8 2 3 1 2 2 2 5 2 1 5 4 3 1 5 7 4 3 3 6 1 7 0 11 5 7 9 2 9 3 2 6 6 8 1 3 2 3 3 3 1 2 1 6 0 6 6 4 1 3 8 5 2 3 2 3 1 3 1 8 0 10 2 5 5 3 5 3 4 1 5 4 1 3 2 3 1 3 1 1 4 1 2 1 1 3 3 5 1 5 0 6 8 9 1 2 8 5 1 1 3 1 1 1 5 0 10 4 5 4 8 1 9 8 1 9 6 1 3 2 3 1 1 5 0 11 3 6 4 3 2 1 1 5 6 1 3 1 3 1 1 2 3 5 1 3 2 3 7 1 6 0 6 8 1 2 7 9 7 1 1 2 2 2 2 1 6 0 9 7 1 3 4 1 9 2 8 1 1 3 2 1 3 1 1 8 0 6 5 3 5 4 5 1 2 3 2 2 1 3 3 2 2 4 3 1 3 4 1 3 5 1 5 0 9 9 2 5 7 1 6 2 7 9 1 2 1 1 1 1 5 0 9 1 5 6 4 6 3 2 1 7 1 2 2 1 2 1 7 0 7 9 2 2 5 1 9 4 3 1 2 3 1 3 3 3 5 4 3 5 4 6 1 4 3 3 4 1 7 0 11 1 7 7 8 9 8 4 8 9 4 6 2 1 1 1 3 1 1 1 7 0 6 9 2 5 4 7 1 1 2 3 3 1 1 2 1 8 0 7 6 1 5 4 1 5 9 1 1 1 2 3 3 1 3 2 1 1 3 3 5 1 6 0 10 1 6 8 2 2 3 1 8 1 3 2 2 1 3 1 2 1 7 0 8 2 6 4 6 6 9 1 1 3 3 3 1 1 3 2 1 5 0 10 2 9 6 6 8 3 1 6 2 4 1 2 2 2 1 1 2 5 3 3 3 7 1 6 0 7 1 8 6 6 9 9 6 1 3 2 2 1 1 1 8 0 9 7 2 1 1 5 8 1 5 2 1 1 3 1 2 1 1 3 1 7 0 9 3 2 7 5 8 4 8 1 4 2 1 1 3 3 3 2 1 2 1 3 3 1 5 3 6 1 9 0 11 6 4 7 2 4 1 1 8 9 2 6 1 1 3 3 1 1 1 2 1 1 5 0 11 3 8 2 7 1 8 9 9 8 5 8 3 3 1 1 2 1 8 0 9 3 8 4 3 1 2 8 8 1 2 1 3 2 1 3 1 1 4 5 2 4 2 4 3 1 5 5 4 7 2 4 3 3 6 1 7 0 11 2 8 6 7 2 4 2 4 7 8 1 2 1 1 1 3 1 2 1 7 0 11 8 5 4 5 7 3 4 9 4 1 7 3 1 1 1 2 3 2 1 7 0 10 5 1 8 2 3 8 7 1 8 3 3 2 1 2 1 1 2 1 5 2 2 1 1 3 5 1 7 0 9 8 5 2 8 6 1 7 1 4 1 1 1 3 1 2 2 1 6 0 10 6 5 4 1 1 5 5 6 8 5 2 2 1 3 1 2 1 6 0 8 6 9 3 4 3 6 1 8 2 1 1 1 3 1 5 2 3 2 1 3 7 1 8 0 6 7 4 7 1 5 9 1 2 3 1 3 1 2 1 1 9 0 9 1 7 5 5 6 7 8 9 2 1 1 3 1 1 2 1 1 2 1 7 0 7 5 1 8 3 1 5 2 1 3 1 3 3 2 2 3 4 3 5 4 1 4 3 4 1 8 0 8 7 8 7 1 4 1 5 2 2 3 3 1 1 3 1 3 1 5 0 6 9 8 4 3 2 1 1 2 1 2 3 1 5 0 8 6 2 8 2 7 7 2 1 1 1 1 3 2 1 5 1 5 4 3 2 5 3 3 7 1 7 0 9 2 9 6 1 3 6 8 4 4 1 1 1 1 2 3 1 1 6 0 8 1 4 7 3 2 1 6 4 2 1 2 3 1 2 1 6 0 10 1 1 1 7 2 6 9 1 5 1 1 3 1 2 1 2 5 3 1 2 3 3 3 3 5 1 8 0 6 4 7 1 6 9 1 2 2 2 3 3 2 1 2 1 8 0 8 2 8 7 2 4 6 1 2 1 2 3 1 1 3 3 2 1 5 0 9 6 8 4 3 9 6 9 1 9 1 3 1 3 3 4 3 1 5 3 3 6 1 5 0 8 3 9 6 3 1 8 1 4 1 2 3 3 1 1 9 0 8 5 8 1 7 7 2 4 6 2 3 2 1 1 3 2 3 3 1 5 0 10 4 6 6 4 7 2 1 8 4 9 1 1 3 3 1 3 3 1 5 2 2 3 4 1 8 0 11 1 1 6 7 6 3 7 6 2 8 9 2 1 3 2 3 2 1 1 1 5 0 8 3 9 2 6 1 5 3 2 2 2 2 1 3 1 9 0 9 3 2 2 1 4 6 8 8 5 3 3 1 3 2 1 3 1 1 3 5 1 2 3 6 1 8 0 11 2 5 1 8 3 6 3 7 6 7 1 1 2 1 1 3 1 2 3 1 9 0 10 1 8 5 7 6 1 8 5 8 1 3 3 3 2 1 2 3 3 2 1 9 0 11 2 5 7 1 7 2 7 5 3 1 8 1 3 2 1 1 1 1 1 1 3 3 1 1 3 1 1 3 6 5 5 3 5 1 9 0 10 9 5 3 7 5 6 5 2 1 5 1 1 1 3 1 1 3 2 1 1 8 0 11 2 2 8 8 8 5 1 3 3 9 8 2 2 1 2 3 2 3 3 1 8 0 6 5 1 3 7 1 8 1 1 3 1 2 3 1 1 3 1 4 3 4 3 6 1 9 0 10 3 2 9 9 6 3 7 4 5 1 2 3 3 3 2 1 3 1 3 1 5 0 11 3 5 8 5 4 2 2 5 8 6 1 1 1 1 1 2 1 9 0 6 8 6 4 1 8 8 2 3 3 2 1 1 3 1 1 4 2 5 1 4 4 3 5 1 6 0 10 9 6 4 3 4 1 3 2 1 8 1 3 1 2 1 2 1 7 0 10 5 6 1 3 4 5 6 6 1 7 3 3 3 1 2 1 2 1 5 0 8 8 1 6 8 6 1 3 4 2 3 1 1 3 2 3 5 4 1 3 6 1 5 0 11 9 8 5 1 9 1 7 2 8 5 3 1 3 1 3 2 1 6 0 11 2 5 4 4 1 5 7 5 7 9 8 2 3 3 1 1 2 1 5 0 11 7 4 1 8 7 3 3 5 8 4 1 2 1 1 1 2 3 1 5 4 3 2 3 5 1 8 0 8 2 1 2 5 4 9 1 5 2 2 1 1 1 1 1 2 1 9 0 6 8 9 3 1 4 8 3 3 1 3 3 1 2 1 3 1 9 0 7 3 6 9 4 4 3 1 1 1 3 3 1 2 2 2 2 5 3 5 5 2 1 4 4 3 5 5 3 3 4 1 6 0 8 9 5 7 7 6 7 1 5 1 1 2 3 3 1 1 5 0 7 3 9 6 7 1 4 1 2 1 3 3 1 1 8 0 11 5 3 2 5 8 4 1 8 2 7 2 1 2 1 1 3 2 1 1 5 3 5 4 3 7 1 7 0 8 2 2 7 1 5 8 9 5 1 1 3 2 3 3 1 1 9 0 8 6 4 3 9 7 5 8 1 2 3 2 1 3 3 1 3 3 1 8 0 6 2 6 1 2 1 9 2 1 3 1 3 3 2 1 2 3 1 2 2 5 1 3 7 1 5 0 8 6 3 4 9 1 8 3 8 1 2 3 3 1 1 7 0 6 1 7 7 4 8 1 3 3 1 1 1 3 2 1 9 0 11 3 1 3 8 7 5 4 3 3 9 8 3 3 2 1 1 1 3 2 2 1 1 4 1 4 1 1 3 5 1 8 0 6 8 5 4 2 1 7 1 2 1 1 2 1 2 3 1 8 0 7 1 7 1 8 1 2 3 3 1 1 3 3 1 3 2 1 5 0 10 2 8 2 7 1 5 1 8 7 5 2 1 1 3 3 4 5 5 1 1 3 4 1 9 0 6 1 6 6 9 2 7 1 2 1 3 1 3 2 2 1 1 8 0 10 4 6 2 5 9 6 5 1 1 5 1 1 3 3 3 2 2 3 1 5 0 11 6 1 1 4 8 2 8 9 7 6 2 3 3 1 1 2 2 1 4 4 5 5 2 5 5 3 4 1 8 0 9 9 7 1 3 9 7 2 3 9 1 2 3 3 3 2 3 3 1 5 0 8 4 6 4 8 3 1 1 3 2 1 1 1 2 1 8 0 10 5 6 5 1 1 5 6 4 4 9 1 3 2 1 3 2 2 1 3 2 5 3 3 6 1 6 0 11 4 7 9 1 3 1 3 8 1 7 9 3 1 3 2 1 2 1 7 0 10 1 4 3 2 7 4 4 9 7 9 3 3 2 3 1 2 1 1 6 0 11 2 7 1 5 9 6 4 1 2 8 7 3 3 1 1 3 3 2 1 5 4 1 5 3 4 1 7 0 11 1 1 3 1 6 1 5 3 4 3 1 2 3 3 1 2 1 3 1 5 0 6 1 8 9 8 9 5 1 2 2 2 1 1 9 0 10 8 7 3 9 9 2 3 1 4 2 2 1 1 2 2 1 2 3 3 2 4 3 5 3 6 1 7 0 7 2 6 5 6 5 1 8 3 2 1 3 3 2 3 1 9 0 9 7 4 3 1 1 8 2 4 9 1 2 3 1 3 1 2 2 3 1 9 0 9 9 1 3 4 9 8 1 3 2 1 3 1 3 2 3 3 3 1 4 5 1 3 1 4 3 7 1 5 0 9 9 4 7 6 5 8 4 9 1 1 3 3 1 1 1 7 0 10 1 1 3 2 6 3 8 2 7 2 1 1 2 3 2 1 1 1 5 0 8 6 5 6 1 8 1 7 5 1 3 2 3 2 3 4 1 2 2 1 2 5 3 2 3 5 5 5 3 7 1 6 0 10 9 3 2 5 9 8 8 1 2 3 3 3 1 2 3 3 1 6 0 6 2 9 9 7 8 1 1 1 3 2 1 3 1 9 0 11 2 4 3 1 4 5 8 7 1 7 1 1 3 1 1 1 3 1 2 1 4 2 5 3 1 1 3 3 4 1 7 0 11 3 2 1 6 7 2 5 4 8 1 3 3 1 3 1 3 3 1 1 7 0 11 1 1 5 5 1 9 9 4 2 4 4 1 3 2 2 2 1 2 1 7 0 11 3 2 1 1 6 5 9 9 5 1 5 3 1 2 2 3 1 1 3 3 1 2 3 4 1 6 0 6 3 1 5 8 1 1 1 1 2 3 2 1 1 9 0 10 3 6 7 7 6 4 2 5 1 7 3 2 1 3 1 2 3 2 1 1 8 0 10 5 7 6 1 6 1 9 6 4 4 2 3 1 1 2 2 2 1 3 4 3 4 3 5 1 8 0 6 8 4 1 8 3 5 1 1 3 2 1 3 1 1 1 7 0 10 1 4 6 2 7 7 5 2 7 5 2 2 3 1 2 1 2 1 6 0 9 7 7 7 1 3 6 9 1 6 1 1 2 3 3 2 3 4 2 5 2 3 5 1 5 0 7 1 9 1 5 9 6 5 3 3 1 3 2 1 5 0 6 9 8 4 3 9 1 3 1 1 3 2 1 7 0 7 7 9 1 7 1 4 8 3 2 2 3 1 1 2 5 5 2 2 2 4 5 7 1 5 5 5 3 7 1 5 0 11 8 5 5 5 9 6 1 2 1 3 9 1 3 1 3 2 1 9 0 6 7 1 1 3 7 2 3 1 1 1 2 1 1 2 1 1 5 0 7 4 1 1 5 6 8 2 1 3 1 2 2 4 3 1 3 3 5 4 3 7 1 7 0 11 2 6 1 3 1 4 9 1 1 3 4 1 3 1 2 1 2 1 1 9 0 9 3 5 3 2 1 5 3 1 7 3 2 2 2 1 2 1 2 1 1 5 0 7 2 6 9 1 9 2 4 1 3 2 3 3 5 2 1 4 5 1 2 3 6 1 7 0 7 3 8 5 4 1 2 1 1 3 1 3 3 1 1 1 9 0 6 1 6 7 7 7 2 1 2 1 3 2 3 3 2 3 1 9 0 6 8 1 1 1 1 4 1 1 2 2 3 3 1 3 1 1 2 1 1 3 2 3 5 1 8 0 8 1 4 1 5 5 8 1 8 1 2 2 1 1 1 2 3 1 8 0 8 1 1 9 6 2 7 2 9 1 1 1 2 2 2 3 1 1 9 0 6 1 7 9 6 2 8 1 3 3 2 1 1 2 2 2 5 2 3 4 4 3 7 1 8 0 9 8 4 8 3 1 7 6 7 1 1 2 3 3 3 3 2 1 1 9 0 9 1 4 5 2 1 3 7 9 4 2 2 1 1 2 1 1 3 2 1 8 0 11 1 5 3 1 4 4 5 5 4 5 7 3 2 1 3 1 2 3 1 5 2 5 3 5 4 3 1 3 4 3 1 3 2 7 3 4 3 3 7 1 9 0 9 8 1 5 6 5 9 4 1 6 1 2 2 2 1 1 1 2 3 1 9 0 7 2 7 3 1 1 7 1 2 3 1 3 1 1 3 3 1 1 9 0 8 6 9 2 5 1 8 8 4 1 3 3 2 3 2 2 3 1 1 4 2 2 4 1 1 3 6 1 7 0 9 7 3 5 7 4 3 4 1 5 2 2 1 3 3 3 1 1 8 0 11 2 2 3 2 7 8 9 5 1 6 4 1 3 1 1 2 1 3 1 1 6 0 8 7 7 1 2 1 1 1 2 1 3 2 2 1 1 2 5 4 3 3 3 3 6 1 9 0 8 9 8 1 7 2 9 6 1 1 2 1 1 2 3 3 3 1 1 5 0 7 3 3 3 3 8 2 1 3 3 1 2 1 1 8 0 10 9 8 4 8 2 3 6 1 7 6 1 1 1 2 2 3 1 2 3 3 2 5 1 1 3 5 1 7 0 8 5 1 8 6 3 2 1 6 1 1 1 3 1 3 2 1 8 0 11 9 9 2 6 7 1 8 6 2 8 1 1 3 3 3 1 2 3 1 1 7 0 7 3 9 4 1 1 3 9 1 1 3 3 3 2 1 1 5 2 5 1 5 3 4 5 5 3 6 1 5 0 9 1 1 7 2 8 5 7 4 1 2 3 1 1 3 1 7 0 7 1 6 6 8 6 7 2 1 1 2 2 3 1 2 1 8 0 6 7 7 1 5 4 1 2 2 2 3 3 1 2 1 1 5 2 2 3 1 3 6 1 6 0 11 7 1 3 1 8 3 4 1 7 7 9 1 3 3 1 2 1 1 5 0 9 4 5 4 9 4 3 7 2 1 1 3 1 1 3 1 8 0 8 6 5 2 8 1 6 1 8 1 3 3 3 2 1 2 3 5 2 2 1 4 2 3 7 1 6 0 9 5 2 3 7 6 7 1 6 1 3 1 1 2 2 3 1 6 0 10 5 8 8 4 1 9 7 5 6 2 2 3 1 1 2 2 1 5 0 7 6 2 5 1 6 2 9 1 3 3 1 1 2 3 1 5 1 3 3 3 5 1 7 0 11 4 9 9 5 1 1 6 4 1 5 1 1 1 2 2 3 1 1 1 8 0 10 6 3 9 6 5 6 7 4 1 2 3 1 1 1 1 2 3 3 1 6 0 9 7 8 3 1 7 3 4 6 1 1 1 3 1 2 2 3 4 3 1 4 3 5 1 9 0 6 2 1 4 8 5 7 3 1 2 2 3 2 1 1 2 1 8 0 8 3 1 5 1 6 8 5 3 3 3 3 1 1 1 3 3 1 9 0 6 9 1 8 8 3 5 1 2 1 3 2 1 1 1 2 2 1 5 1 4 4 7 6 1 1 5 5 3 7 1 9 0 8 2 1 5 3 8 1 9 3 3 3 2 2 2 3 2 1 1 1 5 0 9 6 4 7 1 8 6 4 9 1 1 1 2 1 1 1 5 0 6 2 2 8 3 9 1 2 3 3 1 3 4 3 2 5 1 5 1 3 7 1 5 0 6 4 1 9 2 1 8 3 1 1 1 1 1 5 0 8 9 6 4 3 5 4 2 1 2 1 1 1 1 1 8 0 9 9 3 8 1 4 8 9 6 2 3 2 2 1 1 3 2 3 4 4 2 2 4 1 1 3 7 1 6 0 6 3 1 9 9 6 1 3 2 1 1 3 3 1 7 0 10 9 4 2 1 1 5 3 8 7 1 1 1 2 1 1 3 2 1 8 0 11 9 5 4 5 2 2 5 1 5 7 5 3 3 1 3 2 3 1 2 5 1 4 2 3 1 3 3 7 1 6 0 8 3 8 2 3 1 7 6 4 1 3 2 1 3 1 1 9 0 9 8 7 7 6 8 1 4 2 6 2 3 3 1 1 2 1 1 3 1 6 0 9 8 6 7 4 8 5 6 1 1 1 1 3 3 2 2 4 4 2 3 1 5 3 3 5 1 7 0 10 1 8 3 1 5 8 7 9 9 2 1 3 2 3 1 3 2 1 5 0 8 9 4 4 4 1 2 3 8 2 1 1 1 1 1 5 0 9 1 3 7 5 7 2 3 7 7 2 1 3 1 2 3 1 1 3 3 3 4 7 4 3 5 5 3 7 1 5 0 11 1 6 1 6 6 6 7 5 9 1 7 1 1 3 1 2 1 5 0 8 7 2 1 7 7 3 1 3 2 1 3 2 1 1 5 0 11 1 6 8 9 6 7 6 6 9 9 5 1 3 2 3 1 1 5 3 5 5 2 3 3 5 1 8 0 6 1 7 6 3 5 6 2 2 2 2 2 1 1 1 1 6 0 7 7 2 6 1 2 7 2 1 1 3 2 2 2 1 8 0 9 1 1 8 7 4 9 3 8 9 2 1 3 1 1 1 2 3 3 1 3 3 4 3 7 1 9 0 11 1 6 4 8 2 1 3 6 6 1 9 1 3 1 1 1 1 1 1 2 1 9 0 6 1 9 9 8 8 2 2 2 1 2 3 3 1 3 2 1 5 0 9 1 7 6 9 8 1 5 3 9 1 2 1 1 2 1 3 5 5 1 3 2 3 5 1 8 0 9 6 1 1 1 8 5 7 9 7 3 2 2 1 1 1 1 1 1 9 0 7 9 4 3 2 1 1 7 1 1 3 3 2 1 3 3 2 1 7 0 10 1 4 4 2 4 2 8 5 1 9 3 1 1 1 1 2 3 2 5 1 1 5 3 5 1 9 0 6 7 1 7 7 6 5 1 1 2 2 3 2 2 1 2 1 9 0 11 6 3 4 2 2 2 1 2 1 7 4 2 2 1 3 1 2 1 1 2 1 7 0 10 4 5 4 1 8 7 2 9 9 2 1 1 2 2 2 2 1 5 5 3 1 5 4 1 7 3 4 4 4 3 5 1 5 0 9 1 8 7 5 5 1 3 3 9 3 2 1 3 2 1 5 0 11 7 3 9 1 7 9 9 8 1 8 1 2 2 2 1 2 1 9 0 9 5 1 9 1 6 6 8 6 2 1 2 3 1 3 3 3 3 1 4 2 2 2 4 3 5 1 7 0 7 4 2 1 7 1 9 7 2 2 3 1 3 1 1 1 7 0 11 6 7 1 1 8 3 9 1 8 8 7 3 1 1 2 3 1 3 1 8 0 6 3 9 4 1 6 3 3 1 3 2 2 1 1 2 1 3 3 5 3 3 6 1 5 0 6 9 3 5 5 3 1 1 1 1 1 3 1 7 0 8 3 6 2 7 3 7 1 7 1 1 2 1 3 2 3 1 9 0 7 1 7 1 7 7 5 5 1 2 3 2 2 1 3 3 1 3 1 3 2 2 5 3 5 1 5 0 6 1 7 3 6 5 1 1 1 1 3 1 1 5 0 8 9 1 5 9 1 7 4 3 2 2 1 1 2 1 6 0 6 7 2 6 7 2 1 1 1 2 2 3 3 1 2 2 2 4 4 6 1 3 5 5 3 4 1 8 0 6 4 4 5 7 1 8 1 3 2 1 2 1 1 1 1 8 0 8 9 8 6 1 6 9 4 9 2 1 3 2 3 2 1 1 1 6 0 7 8 1 1 4 1 2 1 1 3 2 2 1 2 2 4 1 1 3 5 1 7 0 11 9 8 1 6 5 6 9 6 4 6 5 3 1 1 3 3 2 1 1 6 0 6 8 1 6 9 8 7 1 3 1 2 3 3 1 9 0 8 1 2 9 1 2 2 8 6 3 1 1 3 1 3 2 2 1 4 5 1 4 2 3 4 1 6 0 10 4 6 7 8 6 8 1 9 3 1 1 3 2 3 2 1 1 9 0 7 3 6 1 6 9 6 2 1 1 1 3 2 3 3 2 2 1 6 0 7 5 1 1 4 1 1 8 2 1 1 1 2 1 3 2 1 5 3 6 1 8 0 10 5 9 4 1 2 8 6 1 8 4 3 1 2 2 3 1 2 2 1 6 0 7 6 3 8 7 5 6 1 3 1 2 3 1 3 1 7 0 11 3 7 6 3 6 8 4 2 1 7 6 3 1 1 3 3 3 3 4 5 5 2 5 4 3 6 1 8 0 9 2 2 7 9 9 8 1 5 3 1 3 1 1 3 3 2 3 1 5 0 11 8 1 5 9 1 5 8 5 2 7 1 1 2 3 1 3 1 6 0 11 5 1 8 8 5 1 1 2 1 3 2 2 1 1 3 1 3 4 1 5 2 5 5 7 2 4 7 4 5 4 3 5 1 5 0 10 7 5 1 2 1 8 4 8 1 6 2 1 3 2 3 1 5 0 6 4 3 9 1 6 1 3 2 1 2 1 1 8 0 9 6 3 4 7 3 1 9 7 4 2 3 2 1 3 1 3 1 1 3 4 3 2 3 6 1 9 0 11 2 1 8 1 7 7 7 4 9 4 5 1 3 3 1 2 3 1 1 3 1 6 0 7 3 4 4 1 9 8 7 2 1 1 2 1 3 1 5 0 10 6 3 5 1 3 2 7 5 5 4 1 1 1 1 3 3 3 1 5 2 4 3 7 1 9 0 9 1 3 9 3 2 4 2 6 3 1 1 3 2 3 3 1 2 2 1 5 0 8 7 5 2 9 3 1 4 7 3 3 1 3 1 1 8 0 11 1 9 8 6 1 4 2 3 7 7 6 2 1 2 3 2 1 1 1 2 1 1 4 2 2 3 3 5 1 6 0 11 4 5 2 1 3 4 5 3 6 2 1 3 3 2 1 3 3 1 9 0 6 1 9 2 3 4 9 2 1 1 2 2 3 2 3 1 1 9 0 7 1 4 5 9 2 4 2 3 1 2 3 3 1 2 1 2 1 2 2 3 3 3 4 1 7 0 7 1 9 2 2 7 1 1 1 3 3 1 1 3 2 1 5 0 9 2 1 4 6 2 7 2 5 1 3 1 1 1 1 1 5 0 8 9 6 7 4 1 1 6 1 1 3 3 1 1 3 2 1 5 2 6 4 2 4 1 2 6 2 4 4 3 6 1 8 0 8 9 1 7 2 7 7 3 1 1 3 1 1 2 2 3 1 1 7 0 10 8 8 1 1 8 3 7 1 9 9 1 2 1 3 1 3 3 1 6 0 10 5 1 3 4 3 4 3 6 1 8 1 1 3 1 1 2 1 1 3 4 2 3 3 6 1 7 0 7 1 4 2 5 1 5 6 3 1 1 1 3 1 1 1 8 0 7 1 1 9 2 9 3 9 1 1 3 3 1 3 1 2 1 9 0 10 1 8 3 3 6 1 5 5 4 5 2 3 2 1 3 1 3 1 2 1 5 1 5 3 3 3 4 1 6 0 10 3 5 5 6 7 7 1 8 2 3 1 1 1 1 3 3 1 8 0 8 2 2 1 5 7 5 4 1 3 1 2 3 1 1 1 2 1 5 0 11 8 1 6 9 1 4 1 8 1 3 5 1 3 1 1 3 4 1 5 3 3 7 1 5 0 11 7 9 1 8 6 1 1 9 4 8 2 2 1 3 1 1 1 8 0 9 7 4 8 5 4 8 3 1 4 2 1 3 3 1 3 1 2 1 7 0 10 1 3 7 2 8 7 6 1 3 2 3 1 3 1 1 3 2 5 2 4 1 2 3 4 1 5 2 3 5 5 3 4 1 9 0 11 6 9 3 5 2 6 1 5 4 7 4 3 1 1 1 2 3 1 3 1 1 8 0 6 9 4 7 1 1 8 3 2 1 2 1 1 1 1 1 7 0 6 1 9 5 1 9 9 3 2 3 2 1 2 1 3 3 3 2 3 7 1 8 0 9 6 2 8 1 6 1 1 9 3 3 3 3 1 1 3 3 1 1 5 0 6 4 7 1 3 8 6 3 2 3 3 1 1 9 0 10 1 4 7 9 5 7 6 4 1 8 1 2 1 1 2 3 1 1 2 1 3 4 3 5 3 5 3 5 1 5 0 7 5 2 4 5 1 8 1 1 1 1 1 1 1 8 0 8 3 7 1 5 6 1 8 6 3 3 1 3 2 1 1 3 1 5 0 8 4 4 7 7 8 9 1 5 1 3 2 3 1 3 3 1 3 1 3 6 1 9 0 8 1 1 6 1 4 2 4 6 1 1 1 2 3 3 1 2 3 1 5 0 7 1 5 9 3 7 5 5 2 1 2 1 1 1 6 0 8 6 5 9 9 2 4 1 3 3 1 2 3 3 3 3 3 3 4 4 2 3 6 1 7 0 10 1 5 1 7 2 1 4 1 2 4 3 1 2 1 1 1 3 1 6 0 7 1 3 3 1 5 9 9 1 2 2 1 1 1 1 9 0 7 6 1 7 3 2 6 3 2 2 3 2 1 1 2 2 3 4 1 4 5 2 2 2 3 1 4 1 5 5 3 7 1 8 0 6 1 7 5 7 5 7 3 3 3 2 3 1 1 2 1 8 0 8 1 1 5 5 8 1 6 3 1 1 1 1 1 2 1 1 1 5 0 6 3 4 1 8 8 6 2 1 3 3 1 4 2 3 2 4 5 1 3 6 1 9 0 7 7 9 8 1 5 8 3 1 1 2 1 1 1 1 2 3 1 6 0 11 3 5 3 4 7 4 1 6 8 6 3 3 1 3 1 2 3 1 8 0 6 1 7 8 5 1 3 3 3 3 1 2 2 1 2 5 1 2 5 4 3 3 6 1 5 0 9 8 5 4 7 1 1 1 4 4 1 2 1 2 3 1 6 0 7 1 7 1 1 5 8 8 1 2 3 2 1 1 1 8 0 6 1 6 7 4 3 7 2 2 1 3 1 3 3 3 3 5 3 5 5 2 3 5 1 7 0 11 2 2 1 7 9 2 2 5 1 6 3 1 1 3 3 3 2 3 1 8 0 7 4 5 3 8 1 1 8 3 3 2 2 3 1 1 2 1 9 0 8 6 3 1 4 5 8 8 4 3 1 3 3 2 2 3 3 1 3 2 2 3 1 3 5 1 8 0 11 8 1 4 5 3 2 8 7 5 1 6 1 1 1 2 3 1 2 1 1 5 0 6 5 9 6 9 2 1 1 1 3 2 1 1 5 0 10 5 6 5 6 2 1 5 9 5 9 3 2 1 1 1 2 2 1 5 1 3 4 3 7 3 5 5 3 7 1 5 0 6 3 3 1 8 4 3 3 3 2 1 1 1 6 0 6 4 1 9 2 5 5 1 1 1 1 1 1 1 8 0 6 4 1 1 2 5 5 1 1 3 1 1 1 3 1 5 3 1 1 4 5 4 3 6 1 5 0 8 1 6 5 6 1 8 4 9 2 1 3 2 2 1 8 0 6 7 6 4 5 1 1 1 3 1 2 1 1 1 1 1 6 0 8 6 7 2 7 9 9 8 1 1 2 2 2 1 2 5 3 1 2 1 2 3 7 1 5 0 7 1 8 1 3 7 7 1 3 1 1 3 1 1 7 0 10 8 2 2 1 1 2 9 6 3 7 1 1 2 2 2 1 1 1 7 0 7 3 1 7 8 8 6 4 1 2 1 1 1 2 1 2 5 3 3 5 1 3 3 6 1 7 0 11 6 2 1 1 9 5 2 1 2 1 6 3 1 1 2 1 2 1 1 6 0 7 1 3 5 7 2 1 1 2 2 2 1 3 1 1 9 0 10 5 7 9 5 1 3 8 1 8 6 1 3 1 1 1 2 2 2 2 2 5 4 2 1 4 3 6 1 7 0 10 9 9 7 9 3 9 3 7 2 1 3 1 1 3 2 3 3 1 7 0 9 9 6 2 6 1 8 9 4 8 2 3 1 3 1 1 1 1 9 0 8 5 8 6 7 1 9 2 3 2 1 1 2 3 2 2 2 3 2 1 4 3 2 1 7 2 1 3 7 4 3 3 7 1 5 0 9 9 7 6 8 1 8 9 5 8 1 1 2 2 1 1 6 0 9 8 2 9 6 4 1 2 4 1 1 2 1 1 2 2 1 5 0 10 3 6 3 1 1 9 9 3 8 1 1 3 1 1 3 1 2 1 2 2 1 5 3 5 1 7 0 11 1 1 7 6 4 1 1 5 1 9 1 1 3 1 1 3 1 1 1 8 0 10 1 5 7 4 5 1 9 2 2 5 2 1 1 3 3 3 2 1 1 5 0 6 5 1 1 8 8 5 1 3 3 1 1 1 4 1 3 3 3 4 1 6 0 11 5 5 1 4 6 4 3 2 7 2 9 1 2 1 2 1 1 1 6 0 10 4 7 7 4 8 3 7 1 7 2 2 3 1 2 2 2 1 6 0 11 6 6 1 5 9 9 1 6 2 4 9 1 1 1 3 1 3 2 3 1 5 3 6 1 7 0 11 7 8 5 3 8 4 6 5 1 8 8 1 3 1 3 1 2 1 1 7 0 11 3 1 9 6 6 7 3 4 6 7 1 3 2 1 1 2 1 2 1 9 0 8 8 6 7 1 6 1 6 7 1 3 1 1 3 3 1 2 1 2 1 5 4 3 2 1 4 4 5 5 3 4 1 8 0 11 2 1 5 4 9 3 4 6 2 8 3 3 2 2 1 2 2 2 2 1 9 0 7 7 8 6 1 6 1 5 3 1 1 2 3 1 2 1 3 1 8 0 11 1 1 5 1 3 2 6 3 8 3 2 1 2 1 3 2 1 3 3 2 1 4 4 3 5 1 8 0 11 5 3 1 4 1 8 5 6 1 6 8 1 3 3 2 3 1 2 1 1 7 0 10 3 2 1 1 9 7 9 9 2 3 3 2 1 3 1 3 3 1 7 0 11 7 1 3 2 4 4 1 8 7 8 5 2 3 3 1 1 1 2 2 5 2 4 5 3 4 1 6 0 8 3 3 1 1 7 9 6 7 3 2 2 1 2 2 1 7 0 6 9 6 6 1 9 4 2 2 1 2 2 2 3 1 5 0 6 5 5 1 5 6 5 1 1 1 1 3 3 4 2 3 3 4 1 8 0 9 8 6 6 1 2 2 5 1 8 3 2 3 2 3 1 2 1 1 9 0 8 1 2 8 3 5 3 5 7 3 1 2 1 1 1 1 2 1 1 5 0 6 4 2 5 3 1 8 3 1 1 1 1 4 4 3 5 3 5 1 8 0 10 4 3 2 4 6 5 8 3 1 1 1 3 2 3 2 3 2 3 1 6 0 7 5 5 7 1 4 1 7 3 1 2 1 1 3 1 9 0 10 6 8 2 4 8 1 7 3 9 7 3 3 3 2 3 1 1 2 3 1 4 5 2 5 4 1 7 2 3 1 6 6 3 5 3 3 7 1 9 0 9 1 2 1 7 7 4 5 4 8 3 3 1 1 3 2 2 3 1 1 5 0 6 1 9 3 7 3 9 1 1 2 1 2 1 5 0 10 5 3 5 5 4 6 8 6 7 1 2 2 1 1 1 4 2 5 1 1 1 1 3 5 1 8 0 10 4 8 5 8 2 2 1 6 6 7 1 1 3 3 1 3 3 1 1 6 0 8 5 5 1 1 3 1 5 9 1 1 2 3 3 3 1 7 0 6 5 3 9 1 4 2 1 1 1 2 1 3 1 5 3 1 2 3 3 5 1 8 0 11 9 2 9 2 6 1 2 1 1 7 2 1 1 1 3 1 3 3 1 1 9 0 6 9 6 9 1 3 1 1 1 1 1 3 1 3 1 3 1 5 0 9 9 6 4 8 9 2 4 3 1 2 2 2 1 2 5 1 1 3 5 3 4 1 8 0 7 9 5 7 1 9 8 3 1 1 3 2 2 3 2 1 1 7 0 6 2 1 4 6 2 4 1 2 1 2 2 2 2 1 5 0 7 8 1 8 2 4 9 7 2 1 1 1 1 1 2 4 3 3 5 1 7 0 9 6 2 8 9 9 8 1 1 9 1 2 1 1 3 3 2 1 5 0 9 1 5 5 4 5 5 5 5 2 3 2 1 2 1 1 6 0 6 3 6 8 4 2 1 1 1 1 2 1 1 2 3 1 2 5 5 4 6 5 4 3 7 1 8 0 11 4 2 5 4 1 5 2 8 1 8 9 2 1 1 3 3 1 2 1 1 9 0 8 1 9 8 9 3 2 4 5 1 1 3 3 3 1 3 1 2 1 6 0 7 2 1 8 4 9 1 1 1 1 2 3 3 1 3 1 1 5 3 2 2 3 5 1 6 0 6 2 1 6 2 7 6 1 2 3 1 2 3 1 6 0 9 6 4 2 1 7 4 1 7 5 1 2 2 1 1 2 1 9 0 10 7 1 8 8 6 6 1 1 1 1 1 1 2 2 1 3 2 3 3 1 2 5 1 4 3 6 1 8 0 11 1 5 6 4 7 3 8 2 9 6 6 1 2 2 1 1 2 3 3 1 7 0 7 1 5 8 5 2 3 2 3 3 1 1 1 2 1 1 6 0 8 8 3 1 7 8 3 4 7 1 3 2 1 3 3 3 3 2 1 1 2 3 6 1 6 0 6 2 1 7 6 2 7 1 1 2 1 1 3 1 9 0 10 8 1 1 3 4 1 8 2 2 4 1 1 1 1 1 1 2 1 2 1 7 0 8 5 4 5 1 4 2 7 1 2 1 3 2 2 1 1 4 5 3 5 5 1 3 6 1 7 0 10 2 1 5 7 4 8 3 6 1 1 3 1 1 3 1 1 3 1 7 0 9 1 1 1 5 4 3 2 7 8 2 2 3 2 3 1 2 1 7 0 6 9 1 8 1 2 8 2 2 1 2 1 3 3 4 1 3 1 3 2 4 3 7 7 5 3 3 5 1 8 0 11 4 7 3 7 1 6 8 8 9 1 3 1 3 2 3 1 2 3 2 1 8 0 6 8 7 9 1 6 7 1 3 3 3 1 1 2 3 1 9 0 8 7 1 4 2 9 2 5 2 1 3 1 2 1 3 1 3 3 4 3 4 5 1 3 6 1 5 0 10 1 9 8 6 5 7 1 5 5 1 1 2 1 1 1 1 8 0 10 2 6 3 6 6 1 5 2 5 8 1 2 1 1 3 1 3 2 1 8 0 10 6 9 8 4 9 7 1 1 6 4 2 2 1 3 1 1 2 2 4 4 2 4 5 4 3 6 1 8 0 6 1 9 8 1 3 4 3 2 1 1 2 1 1 1 1 8 0 8 2 5 2 8 1 9 3 4 1 2 2 2 1 2 1 3 1 5 0 6 9 1 6 9 6 1 3 1 2 1 1 2 1 5 1 5 5 3 4 1 6 0 6 1 8 4 6 1 8 3 1 1 1 2 1 1 7 0 10 6 1 4 9 1 4 9 4 8 7 2 3 1 3 1 1 1 1 8 0 7 5 1 9 6 4 1 2 1 2 2 1 3 3 1 2 5 5 1 2 3 5 1 5 0 9 5 5 8 8 4 1 1 3 7 2 1 1 3 3 1 7 0 11 1 2 2 6 4 3 1 4 8 5 9 3 3 1 1 1 3 1 1 9 0 11 7 7 5 1 6 1 2 1 1 1 5 1 3 2 1 3 1 1 1 2 5 3 1 1 3 7 4 5 5 3 3 5 1 5 0 11 3 1 4 1 9 8 7 6 2 6 1 1 2 3 1 2 1 9 0 10 7 6 3 8 5 2 4 1 1 3 2 3 1 1 2 1 3 2 1 1 5 0 8 2 1 3 9 6 7 2 5 1 3 1 3 1 2 1 4 1 4 3 4 1 5 0 7 7 4 1 6 9 9 9 1 3 3 2 1 1 7 0 11 8 4 9 5 3 1 3 9 3 7 5 2 1 3 2 2 1 1 1 6 0 8 6 6 4 8 1 5 8 6 2 3 2 1 2 2 1 3 3 3 3 5 1 9 0 10 7 4 8 3 1 1 2 2 3 9 3 2 2 1 2 2 2 2 2 1 7 0 8 3 3 5 5 4 3 1 2 1 2 2 1 1 1 1 1 7 0 9 6 4 5 3 1 1 1 8 3 2 1 1 1 2 3 1 4 4 3 3 4 3 7 1 8 0 11 1 2 5 2 6 1 5 7 3 6 1 3 1 2 1 2 1 3 1 1 7 0 10 4 9 9 5 6 8 1 1 6 8 3 1 3 2 2 3 1 1 8 0 10 7 8 4 2 1 5 1 4 3 2 1 3 3 1 2 3 3 3 3 2 2 2 5 3 5 3 6 1 5 0 9 4 7 9 1 9 4 5 3 1 1 1 2 1 1 1 8 0 11 1 9 2 6 1 6 2 8 4 1 3 3 3 1 2 1 1 1 2 1 6 0 9 2 5 7 1 8 5 9 9 1 3 2 1 2 1 3 4 5 2 3 2 3 6 3 1 4 3 3 4 1 6 0 11 3 7 1 1 6 1 8 9 6 6 6 1 1 1 2 2 1 1 9 0 6 7 2 1 2 1 7 2 3 1 3 1 1 3 2 1 1 5 0 8 1 9 7 5 4 5 4 8 1 1 1 1 2 2 2 5 3 3 5 1 8 0 9 4 4 4 6 9 8 1 2 8 3 1 2 1 2 2 1 3 1 9 0 8 9 1 1 3 1 6 1 1 3 3 1 3 1 2 3 3 1 1 6 0 6 6 8 1 1 1 6 1 1 1 3 1 2 2 3 5 3 4 3 4 1 5 0 8 1 3 5 5 4 8 3 9 3 1 1 2 2 1 5 0 9 4 1 4 1 4 9 9 1 5 2 1 2 3 3 1 9 0 11 4 1 1 2 3 8 1 3 7 5 6 1 2 3 1 3 2 2 3 1 5 3 3 5 3 7 1 6 0 8 8 8 3 3 5 1 7 9 2 2 1 1 1 1 1 7 0 11 8 7 9 8 1 5 4 4 3 6 5 3 1 3 2 3 1 1 1 9 0 8 7 3 1 2 1 1 2 2 3 1 2 3 2 1 2 2 1 2 5 4 5 5 2 2 4 2 4 4 3 3 5 1 9 0 10 3 7 1 7 1 7 9 3 5 4 3 3 1 1 2 3 2 2 2 1 7 0 11 8 7 1 2 6 1 4 9 3 5 1 2 2 1 2 2 2 2 1 7 0 9 1 5 5 8 8 2 2 2 2 1 3 1 3 1 1 2 1 2 4 4 1 3 6 1 8 0 7 9 7 9 7 6 1 8 3 1 2 2 2 1 1 1 1 9 0 8 2 1 7 2 7 2 4 2 2 2 1 2 1 2 2 3 1 1 5 0 8 8 6 9 1 7 1 8 9 1 2 3 1 1 5 4 1 5 5 5 3 5 1 5 0 7 8 1 2 6 6 4 9 2 3 3 1 1 1 7 0 8 5 3 3 1 4 6 5 3 3 2 2 2 1 2 3 1 8 0 6 8 9 3 3 1 1 1 2 1 1 3 2 1 3 2 4 5 5 5 3 5 1 8 0 9 4 1 4 9 9 3 2 6 9 1 3 1 3 1 2 1 1 1 6 0 7 8 4 5 1 1 1 9 1 1 1 1 1 1 1 8 0 10 4 8 9 2 4 7 1 9 1 1 3 1 1 1 1 2 3 2 2 2 2 3 2 6 6 1 4 4 6 7 3 5 5 3 4 1 8 0 9 7 6 1 5 7 3 3 6 8 3 1 3 3 3 2 3 3 1 7 0 8 8 6 3 1 8 5 3 3 2 3 1 1 1 1 2 1 6 0 9 4 1 3 8 5 5 4 6 7 1 1 3 1 2 2 1 2 4 2 3 4 1 9 0 7 4 4 1 7 2 4 5 2 3 2 2 1 2 1 3 3 1 5 0 10 3 9 7 7 7 3 7 7 8 1 1 3 3 3 2 1 7 0 10 9 1 4 1 9 6 8 3 6 1 2 1 2 3 1 2 1 1 5 4 1 3 4 1 6 0 11 3 7 5 5 5 7 1 8 2 5 8 2 3 1 1 1 3 1 8 0 11 5 7 6 1 8 8 7 1 5 3 1 1 1 1 3 3 2 3 3 1 7 0 8 7 6 9 1 6 5 4 1 3 2 1 1 3 3 3 1 1 1 3 3 4 1 8 0 6 8 2 9 9 1 1 1 3 3 1 2 3 1 1 1 8 0 9 7 2 4 9 2 1 3 3 5 2 1 3 1 1 1 3 1 1 5 0 10 5 6 9 9 2 1 9 1 5 6 3 1 3 1 3 2 1 3 2 3 7 1 5 0 11 6 9 2 1 8 3 8 5 3 8 8 2 1 1 2 2 1 6 0 10 6 2 1 1 3 2 2 1 4 9 3 1 3 3 2 1 1 6 0 7 7 1 4 9 7 1 8 3 2 1 3 3 3 1 3 5 5 1 3 3 7 3 3 4 3 5 3 3 6 1 5 0 10 2 1 4 6 1 2 6 1 7 3 2 1 3 2 1 1 8 0 11 3 8 3 1 6 4 3 9 7 1 7 3 2 1 2 2 3 3 2 1 6 0 8 5 2 1 8 2 4 1 6 1 1 3 1 3 1 3 1 2 5 3 1 3 7 1 7 0 7 7 1 5 9 6 7 9 3 1 3 3 1 2 1 1 7 0 6 1 3 7 5 7 2 3 1 3 2 3 3 2 1 9 0 6 1 9 9 7 4 3 3 2 2 2 2 1 2 1 1 2 5 2 5 3 2 3 3 5 1 7 0 10 8 7 6 9 2 1 3 8 1 1 1 3 3 2 3 3 1 1 5 0 6 4 9 3 1 9 9 1 3 1 1 2 1 8 0 7 4 1 5 1 1 3 8 1 1 3 1 2 1 2 1 1 3 5 1 2 3 4 1 8 0 8 8 1 6 4 6 1 1 5 2 1 3 1 3 2 3 1 1 6 0 7 4 1 8 1 5 3 3 2 1 3 2 1 2 1 5 0 8 2 3 3 2 4 5 1 7 1 1 2 1 3 3 5 1 3 3 7 1 6 0 8 9 1 6 9 2 2 7 2 3 1 2 3 1 1 1 5 0 6 6 9 1 4 8 1 2 1 3 3 1 1 5 0 9 4 2 8 5 1 3 2 3 3 3 2 2 1 3 3 4 2 4 2 5 1 3 7 1 5 3 3 5 1 6 0 8 1 5 5 7 4 2 1 6 3 2 2 3 2 1 1 9 0 11 5 3 4 2 5 2 1 1 6 3 9 1 3 2 1 2 2 2 3 1 1 7 0 8 6 1 2 8 6 2 9 9 2 1 1 2 3 1 3 4 5 4 3 1 3 7 1 8 0 9 9 1 4 5 1 4 9 5 2 3 2 3 3 2 1 2 3 1 6 0 9 1 2 4 9 7 8 7 7 5 1 1 1 2 2 1 1 9 0 8 3 1 4 1 7 2 9 5 2 1 2 1 1 1 1 2 2 2 2 2 4 1 1 2 3 6 1 5 0 6 1 3 6 7 1 6 2 1 2 2 2 1 8 0 8 1 6 2 9 8 1 7 5 3 2 1 1 2 1 3 3 1 6 0 6 2 9 5 1 7 1 1 1 3 3 1 1 5 3 2 3 4 1 3 5 1 9 0 6 7 7 2 1 2 8 1 1 1 2 3 2 1 3 1 1 9 0 8 2 8 2 4 1 4 5 2 2 1 1 2 2 3 2 1 1 1 5 0 8 1 3 8 2 3 3 7 5 1 3 2 2 2 1 3 3 4 3 3 4 1 7 0 7 1 6 8 2 6 1 8 3 2 2 1 3 3 2 1 6 0 6 1 6 3 4 1 2 3 1 1 3 1 3 1 9 0 9 9 3 3 7 6 7 1 7 9 3 2 2 1 2 1 2 3 2 2 2 5 3 1 2 2 5 5 3 6 1 9 0 8 6 1 7 6 9 1 5 7 2 1 1 3 2 3 2 1 1 1 6 0 6 8 3 1 6 9 3 3 2 2 1 3 3 1 8 0 6 2 5 6 1 7 1 2 2 1 1 2 2 3 3 5 2 3 2 5 4 3 4 1 9 0 9 8 8 9 9 4 1 8 4 1 2 1 1 1 2 1 3 3 3 1 7 0 6 1 1 5 1 1 8 2 3 1 2 3 2 1 1 8 0 6 9 7 4 2 1 9 1 2 1 3 2 2 2 3 5 3 3 2 3 5 1 6 0 6 3 1 6 7 6 1 1 2 2 1 2 1 1 8 0 9 1 2 3 1 7 5 5 7 2 2 1 1 2 1 2 2 2 1 7 0 9 9 4 1 1 5 2 6 2 6 2 2 1 1 3 1 1 3 2 5 5 2 3 5 1 5 0 10 4 9 2 7 3 1 7 2 1 1 1 2 2 2 2 1 7 0 7 9 1 3 1 7 5 1 1 3 1 3 2 1 2 1 7 0 10 4 5 4 1 9 3 7 9 7 7 2 2 1 1 1 1 3 1 3 2 5 2 3 5 1 6 0 11 1 7 2 6 4 8 2 8 4 6 4 1 3 1 3 2 2 1 7 0 10 1 5 1 6 2 6 3 8 2 9 3 1 1 1 2 2 1 1 7 0 7 1 3 5 9 1 9 9 3 3 3 1 2 1 3 5 1 1 2 5 2 2 3 1 1 5 4 3 7 1 5 0 7 7 4 5 9 6 1 5 3 3 1 1 2 1 8 0 10 4 1 7 5 6 8 8 5 6 7 1 1 1 3 2 1 2 1 1 5 0 11 1 3 6 7 7 5 3 4 4 5 5 2 3 2 1 1 2 2 1 3 1 5 4 3 5 1 7 0 10 3 1 8 8 2 7 6 9 8 6 2 1 3 2 2 2 1 1 9 0 10 4 3 1 7 7 5 5 6 4 5 1 2 1 1 3 1 2 1 2 1 8 0 6 5 1 7 8 1 2 1 2 1 1 2 2 3 1 3 2 4 2 4 3 4 1 7 0 9 4 5 6 2 7 7 1 5 8 2 2 3 1 2 1 3 1 6 0 6 5 9 7 5 1 2 3 1 2 1 1 2 1 6 0 7 1 2 6 1 2 6 9 3 1 2 3 1 3 5 1 5 4 3 5 1 7 0 6 9 1 5 5 2 1 1 3 2 3 1 3 1 1 9 0 6 3 2 8 2 1 8 3 1 2 3 1 1 2 3 3 1 8 0 10 3 3 7 1 8 1 5 4 2 8 2 1 3 2 1 3 1 3 2 2 1 2 5 3 6 1 7 0 9 2 1 4 2 1 7 9 5 3 1 2 3 1 1 3 1 1 8 0 7 7 1 1 2 1 7 1 3 1 2 2 2 1 1 3 1 7 0 9 4 1 6 8 2 2 4 1 3 3 3 1 3 3 2 3 5 3 2 3 4 5 3 2 2 7 5 3 3 6 1 5 0 11 6 6 7 9 2 8 7 1 2 8 7 3 2 1 2 3 1 7 0 8 4 9 5 1 3 7 7 8 1 2 3 2 1 2 1 1 6 0 11 1 1 1 6 2 7 1 4 6 1 5 3 2 2 3 1 1 1 2 2 4 3 2 3 7 1 5 0 8 6 6 8 3 1 2 1 4 3 1 3 2 3 1 6 0 6 5 3 1 7 2 1 1 3 1 1 2 2 1 8 0 11 7 5 3 6 1 9 9 6 4 5 4 1 1 3 3 1 3 1 1 3 1 4 3 5 5 2 3 5 1 6 0 9 3 9 7 1 5 5 7 8 9 1 2 1 3 1 3 1 9 0 6 3 8 1 6 8 2 1 1 1 3 2 1 1 3 2 1 9 0 8 4 6 9 1 1 7 4 7 3 2 1 1 2 1 1 2 3 2 5 3 5 5 3 5 1 7 0 9 7 5 1 1 9 8 8 2 5 3 2 2 2 1 1 1 1 5 0 9 4 2 6 9 1 9 9 7 4 1 1 2 1 3 1 7 0 10 4 9 1 3 6 3 6 2 2 6 2 2 1 2 3 1 1 3 2 2 2 1 3 4 1 9 0 9 3 6 1 3 5 5 2 7 3 3 2 3 1 1 2 3 1 1 1 7 0 9 9 5 3 2 9 5 2 4 1 1 1 1 1 3 2 3 1 7 0 11 6 1 3 5 2 5 3 7 2 5 1 3 2 3 3 1 2 2 2 1 3 2 2 3 1 4 5 3 4 1 5 0 6 2 1 9 3 1 8 2 1 1 3 3 1 5 0 10 6 1 3 4 1 1 9 1 6 9 1 3 1 3 1 1 5 0 8 1 4 7 9 9 2 9 1 2 3 2 3 1 1 1 5 3 3 4 1 5 0 9 1 6 4 7 7 5 5 1 6 3 1 2 3 1 1 7 0 9 1 9 7 2 7 7 7 6 2 1 3 2 1 2 3 1 1 8 0 9 6 1 1 3 5 9 9 7 2 3 3 1 3 1 3 3 3 3 5 3 3 3 6 1 9 0 9 6 2 1 7 5 1 5 3 4 1 2 3 1 1 3 2 2 1 1 6 0 7 9 3 2 7 1 9 9 1 1 2 1 3 1 1 9 0 7 5 7 4 3 1 2 3 3 1 3 3 1 2 3 1 3 3 5 1 4 3 2 3 6 1 6 0 10 1 1 6 1 7 7 2 9 9 5 1 2 3 3 1 1 1 8 0 8 1 7 5 2 7 2 4 4 3 1 1 2 3 3 3 1 1 5 0 11 8 1 3 5 1 7 8 7 4 1 5 1 2 1 1 1 2 4 3 1 2 3 3 2 1 2 1 1 9 5 7 2 5 3 3 4 1 9 0 11 5 7 2 8 1 7 1 9 4 9 9 2 2 3 1 2 1 1 2 1 1 9 0 10 2 5 4 5 8 1 1 5 1 6 1 1 1 1 3 3 1 1 2 1 6 0 6 1 4 9 9 2 9 3 3 3 1 1 1 2 1 2 3 3 5 1 9 0 9 5 9 2 2 5 7 8 1 3 2 1 2 1 2 2 1 3 1 1 7 0 11 1 6 6 8 3 5 7 4 1 5 5 2 1 3 1 1 2 2 1 6 0 10 1 7 7 2 3 5 1 8 1 7 2 1 3 3 2 3 3 3 5 1 4 3 6 1 8 0 9 4 3 8 9 6 1 2 2 3 2 2 3 3 2 2 2 1 1 5 0 9 4 8 1 8 9 1 4 3 7 1 3 3 1 2 1 5 0 7 1 9 4 1 1 6 8 2 1 2 1 1 1 1 2 3 1 3 3 7 1 5 0 9 6 9 9 3 4 8 1 9 1 1 3 3 1 1 1 6 0 9 6 5 4 1 6 8 1 2 5 2 1 1 2 3 3 1 8 0 11 4 5 5 1 6 5 1 3 6 2 2 2 1 2 2 3 2 2 2 1 4 1 1 2 5 2 3 4 1 7 0 6 1 1 7 2 8 7 2 2 1 1 2 3 3 1 7 0 11 8 7 1 5 6 1 8 1 4 2 4 3 1 3 1 1 3 2 1 8 0 6 6 4 9 3 9 1 3 1 2 1 3 1 3 2 3 2 2 2 3 1 6 4 4 3 7 1 6 0 8 3 5 2 6 2 6 1 5 1 1 3 1 3 3 1 8 0 8 8 6 3 9 1 1 5 2 1 3 2 1 1 2 3 1 1 5 0 9 5 5 3 8 7 8 9 1 4 1 3 1 1 1 2 1 5 1 3 3 1 3 7 1 8 0 9 6 3 4 6 4 2 1 1 6 3 3 1 2 1 3 1 2 1 6 0 8 1 7 9 5 6 2 1 3 1 1 2 1 1 2 1 7 0 7 9 4 6 4 5 1 1 1 1 3 1 1 2 3 5 1 4 5 4 3 3 3 7 1 7 0 10 4 7 5 1 1 9 1 1 8 4 1 2 1 3 2 3 2 1 8 0 7 8 1 9 1 5 3 9 1 3 3 2 2 1 2 1 1 7 0 10 8 8 2 1 9 3 1 2 2 3 2 3 1 3 1 3 1 5 1 1 2 3 2 1 3 7 1 8 0 8 1 3 5 8 9 6 7 4 2 2 2 1 1 2 3 3 1 8 0 6 4 9 7 1 6 1 3 1 1 2 3 2 2 2 1 7 0 8 3 7 9 6 1 3 2 8 3 2 1 1 3 3 3 4 1 5 3 1 3 1 1 1 1 5 4 3 3 4 1 5 0 8 9 9 4 1 6 9 2 5 2 3 1 1 1 1 7 0 8 2 1 7 5 1 6 5 8 1 2 1 2 2 1 1 1 5 0 10 6 1 5 5 4 2 9 9 5 1 2 2 1 1 1 4 2 2 3 3 5 1 7 0 9 2 1 4 1 6 4 1 4 4 3 3 3 2 1 1 1 1 8 0 9 9 1 7 6 9 8 1 4 4 3 3 3 2 1 1 3 1 1 9 0 10 3 8 2 1 3 3 7 4 8 3 1 1 1 2 2 2 1 2 3 2 5 4 2 3 3 4 1 9 0 7 9 7 2 1 5 9 5 3 3 1 2 2 1 3 1 2 1 5 0 7 4 8 1 9 9 3 6 1 2 1 1 1 1 7 0 10 3 4 7 9 7 7 8 2 7 1 2 1 1 1 2 2 3 3 5 2 3 3 6 1 9 0 9 1 6 8 1 1 7 6 6 3 2 3 3 3 2 1 3 2 1 1 5 0 8 9 9 1 5 2 5 3 7 2 1 1 2 3 1 5 0 11 2 1 2 2 9 1 9 8 1 3 3 1 1 1 1 1 4 5 1 3 4 5 1 2 5 5 5 3 6 1 5 0 11 1 1 4 2 5 4 6 6 7 9 5 3 2 2 1 2 1 8 0 9 1 7 2 2 4 3 1 2 4 1 1 3 3 1 1 2 2 1 6 0 6 8 1 6 3 6 3 1 1 3 3 2 3 2 2 4 3 4 3 3 5 1 7 0 7 9 9 2 7 1 3 6 1 3 1 3 3 2 1 1 7 0 7 2 4 1 7 9 2 4 3 1 2 2 2 1 3 1 5 0 8 6 7 2 5 4 7 1 8 1 2 1 2 2 4 3 4 4 1 3 6 1 9 0 6 1 8 6 4 4 2 2 3 1 1 3 1 1 1 1 1 5 0 9 5 1 9 5 7 8 2 3 8 2 1 3 2 1 1 5 0 8 7 1 1 5 6 7 5 4 2 2 2 1 3 1 2 1 5 5 5 3 4 1 6 0 11 1 8 2 9 7 2 5 3 3 7 2 3 1 2 1 3 1 1 5 0 6 4 3 6 2 1 9 3 2 2 2 1 1 6 0 6 1 8 2 7 1 4 2 1 2 3 3 2 3 1 3 5 3 7 1 5 0 9 1 8 7 8 5 5 3 1 4 3 3 3 3 1 1 5 0 6 2 9 3 1 3 1 3 1 1 2 2 1 5 0 10 3 1 4 9 4 5 6 6 3 2 2 1 3 1 3 3 3 4 2 5 1 2 1 1 5 3 1 4 3 3 5 1 9 0 10 8 2 6 2 9 1 5 8 1 1 1 1 1 1 1 2 1 3 1 1 6 0 11 7 9 9 5 9 2 2 1 8 3 1 1 1 2 2 1 1 1 6 0 8 1 4 1 4 2 4 1 4 2 1 2 3 3 2 4 3 3 4 3 3 4 1 8 0 11 4 9 6 8 1 1 8 8 8 4 6 3 1 2 1 2 2 2 1 1 8 0 9 9 6 1 6 8 6 1 1 8 1 1 2 3 2 2 2 1 1 7 0 10 1 8 1 1 1 1 4 1 4 7 1 3 1 1 1 3 3 1 2 5 3 3 6 1 8 0 10 3 5 1 8 2 7 7 7 3 1 2 3 2 2 2 1 1 3 1 6 0 6 1 4 3 1 1 6 1 1 2 3 1 1 1 6 0 6 9 3 2 9 4 1 3 3 2 2 1 1 5 4 2 3 2 4 3 6 1 6 0 11 3 7 8 4 2 6 4 1 5 6 1 2 2 3 3 3 1 1 8 0 10 2 6 1 6 7 1 9 7 7 9 3 2 1 2 3 1 2 3 1 7 0 8 1 1 1 1 8 2 5 1 2 3 1 1 2 2 1 3 5 4 1 5 3 2 1 1 5 4 3 6 1 6 0 9 2 4 3 9 3 9 7 2 1 2 1 1 3 1 3 1 8 0 8 8 9 5 9 1 6 7 8 2 2 1 1 1 1 3 1 1 5 0 8 6 2 1 6 5 2 8 5 2 3 3 3 1 1 4 2 1 5 4 3 4 1 6 0 11 4 1 9 8 1 1 9 5 9 9 6 1 3 2 2 1 2 1 8 0 9 5 9 3 6 1 4 1 7 3 2 3 2 1 2 2 3 2 1 8 0 6 8 3 2 1 1 8 3 2 2 1 1 2 3 2 5 2 2 1 3 6 1 6 0 7 7 4 6 7 1 7 9 1 2 2 2 3 3 1 7 0 10 3 9 9 2 7 9 3 9 1 8 2 1 2 1 2 2 1 1 5 0 6 5 2 9 1 5 4 3 3 1 1 1 1 2 5 4 2 3 3 6 1 8 0 7 9 2 6 1 8 2 1 1 3 2 3 2 3 3 2 1 5 0 9 3 4 6 4 9 8 7 6 1 3 2 2 1 1 1 6 0 7 9 1 7 5 1 7 1 1 3 3 1 3 1 5 5 2 5 3 3 3 4 1 9 0 11 5 4 1 7 2 5 8 9 1 9 7 1 1 3 1 3 2 2 3 1 1 7 0 7 9 6 2 2 1 4 8 1 1 1 2 1 2 2 1 7 0 11 1 1 8 3 7 3 1 7 5 3 4 1 2 1 3 3 2 2 4 4 1 5 2 5 4 3 5 4 3 7 1 8 0 6 5 8 6 2 1 9 3 3 2 1 3 1 2 2 1 7 0 10 2 8 9 3 3 9 5 6 1 8 1 1 1 1 1 3 3 1 6 0 10 4 9 2 3 4 4 3 1 1 8 3 1 2 3 3 1 5 5 1 1 1 3 1 3 7 1 5 0 8 9 7 7 1 3 9 2 7 2 3 3 3 1 1 9 0 10 5 4 4 9 3 7 2 8 1 5 2 2 3 2 2 2 1 3 2 1 7 0 11 5 5 1 1 8 1 8 9 3 6 3 3 3 1 2 3 2 1 3 1 4 4 3 4 1 3 5 1 5 0 10 6 1 3 8 3 2 9 4 2 3 2 2 1 3 3 1 9 0 7 1 3 1 8 9 8 3 1 2 1 3 3 1 1 3 3 1 5 0 8 6 6 6 8 1 1 5 5 1 3 1 3 1 2 3 3 3 5 3 6 1 7 0 11 4 1 3 3 1 3 8 3 3 1 8 2 1 1 1 3 2 2 1 5 0 6 1 4 1 6 9 8 2 2 1 3 1 1 8 0 10 5 7 1 4 1 3 6 1 2 3 1 1 1 2 1 2 3 1 4 1 4 1 4 5 3 5 1 6 0 8 6 1 2 5 1 6 8 3 2 3 1 1 1 3 1 6 0 8 8 8 6 7 1 6 1 2 3 3 1 2 1 1 1 5 0 9 4 5 1 1 8 6 6 4 1 2 1 2 1 3 1 4 1 3 5 1 2 7 6 3 6 5 4 5 4 3 8 1 6 9 5 3))

;node consists of:
;A header, which is always exactly two numbers:
;The quantity of child nodes.
;The quantity of metadata entries.
;Zero or more child nodes (as specified in the header).
;One or more metadata entries (as specified in the header).

; parse node
;   if not null then we have a header
;   grab the first 2 fields 
;   push the number of children on the stack 
;   push the number of metadata entries on the stack
;   call parse_node_ until number of children is 0
;   then read the number of metadata nodes

(defun parse_node (lis) ; just get metadata
  (let ((metadata_nodes '()))
    (defun parse_node_ (lis)
      ; it returns just the remaining metadata
      (if (null lis)
          nil
          ;do we have some children to process?
          (let* ((num_child_nodes    (car  lis))
                 (num_metadata_nodes (cadr lis))
                 (lis_left (wrap_n #'parse_node_ (cddr lis) num_child_nodes)))

            (mapcar #'(lambda (x)
                        (setf metadata_nodes (append metadata_nodes (list x))))
                    (subseq lis_left 0 num_metadata_nodes))
            (subseq lis_left num_metadata_nodes))))
    (parse_node_ lis)
    metadata_nodes))
                  

 ;;;;;;;;;;;;;;;;;;;
; turn
(list 2 3 0 3 10 11 12 1 1 0 1 99 2 1 1 2)
;     ^   ^            ^   ^       
;into
((10 11 12) ((99) 2) 1 1 2)

; parse node into tree -- 
;   if not null then we have a header
;   grab the first 2 fields 
;   push the number of children on the stack 
;   push the number of metadata entries on the stack
;   macro --  list parse_node ... num children metadata0 ...metadataN
;   call parse_node_ until number of children is 0
;   then read the number of metadata nodes

(defun totree (lis)
  (if (null lis)
      nil
      (let ((num_child (car  lis))
            (num_meta  (cadr lis)))
        ;(append (list (totree (cdr lis)) (totree (cddr lis))) metadatahere)
        (let ((last_call_returned (cddr lis))) ; cddr lis   is the start of the first child
          (loop for x from 1 to num_child 
                do
                (progn
                  (format t "calling totree on ~A~%" last_call_returned)
                  (setf last_call_returned (totree last_call_returned))))
          (format t "meta here is ~A~%"  (subseq last_call_returned 0 num_meta))
          (subseq last_call_returned num_meta)))))

  ; a child is just the full lis that starts with the correct header

(totree testdata)


      
(defun parse_node_test (lis) ; just get metadata
  (let ((metadata_nodes '()))
    (defun parse_node_ (lis)
      ; it returns just the remaining metadata
      (if (null lis)
          nil
          ;do we have some children to process?
          (let* ((num_child_nodes    (car  lis))
                 (num_metadata_nodes (cadr lis))
                 (lis_left (wrap_n #'parse_node_ (cddr lis) num_child_nodes)))

                        (setf metadata_nodes (append metadata_nodes (list (subseq lis_left 0 num_metadata_nodes))))
            (values
            (subseq lis_left num_metadata_nodes) ;the lis that is left
            

            )))
    (parse_node_ lis)
    metadata_nodes))


(parse_node_test testdata)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; part 2
; If a node has no child nodes, its value is the sum of its metadata entries.
; if it has children its value is the sum of the children pointed to by the metadata entries -- 1 refers to first child, etc.

; parse_node_
;   get num child, num metadata
;   if child==0 sum metadata and   return it
;   else sum the return val from for each valid metadata pointer call parse_node_ on

(defun parse_into_tree (lis) ; just get metadata
  (let ((metadata_nodes '()))
    (defun parse_node_ (lis)
      ; it returns just the remaining metadata
      (if (null lis)
          nil
          ;do we have some children to process?
          (let* ((num_child_nodes    (car  lis))
                 (num_metadata_nodes (cadr lis))
                 (lis_left '())
                 (children_value_sum 0))
                   
                   (multiple-value-bind (left value)
                     (wrap_n #'parse_node_ (cddr lis) num_child_nodes)
                     (setf lis_left left)
                     (setf children_value_sum value))

            (mapcar #'(lambda (x)
                        (setf metadata_nodes (append metadata_nodes (list x))))
                    (subseq lis_left 0 num_metadata_nodes))

            (values
            (subseq lis_left num_metadata_nodes)
            (if (= 0 num_child_nodes)
                (progn
                  (format t "sum at this level with no children ~A~%" (reduce #'+ (subseq lis_left 0 num_metadata_nodes)))
                  (reduce #'+ (subseq lis_left 0 num_metadata_nodes))
                )
                (progn
                  (format t "sum at this level with    children ~A~%" children_value_sum)
                  children_value_sum)))
                
            )))
    (parse_node_ lis)
    metadata_nodes))


(parse_into_tree testdata)
;;;;;;;;;;;;;;;;;;;;;;;;;

          

(subseq (list 3 5 7 8) 0 2)
(subseq (list 3 5 7 8) 3)

;part 1
(reduce #'+ (parse_node testdata))

; a function that calls itself on its output n times
(fn (fn (fn (caddr lis))))   

(wrap_n #'- 5 4)
(untrace wrap_n)
(mac_wrap_n #'abs 5 3)

(defun wrap_n (fn first_arg n)
  (defun wrap_n_ (n)
    (if (= n 0)
        first_arg
        (funcall fn (wrap_n_ (- n 1)))))
  (wrap_n_ n))

; TODO hmmm
(defmacro mac_wrap_n (fn first_arg n)
  (if (= n 0)
    `(funcall ,fn ,first_arg))
    `(funcall ,fn mac_wrap_n ,first_arg (- n 1)))

(funcall #'+ 9 )
  
(funcall #'+ 1 4 (+ 1 5))

(let ((a 0))
  (let ((a 4))
    (format t "a is ~A~%" a))
  (format t "a is ~A~%" a))





(loop for x from 0 to 4
      do
      (progn
      (format t "x:~A~%" x)))
